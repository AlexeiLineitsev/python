# Задание-1:
# Написать программу, выполняющую операции (сложение и вычитание) с простыми дробями.
# Дроби вводятся и выводятся в формате:
# n x/y ,где n - целая часть, x - числитель, у - знаменатель.
# Дроби могут быть отрицательные и не иметь целой части, или иметь только целую часть.
# Примеры:
# Ввод: 5/6 + 4/7 (всё выражение вводится целиком в виде строки)
# Вывод: 1 17/42  (результат обязательно упростить и выделить целую часть)
# Ввод: -2/3 - -2
# Вывод: 1 1/3


# def delim_str(x):       # Функция разбиения на числитель и знаменатель
#     x_d = x.split('/')
#     x = [x_d[0], x_d[1]]
#     x = list(map(int, x))
#     return x
#
#
#
# x = '11/12'
# y = '1/13'
# z = []
#
# x = delim_str(x)    # x - числитель
# y = delim_str(y)    # y - знаменатель
#
# val_x = (x[0]*y[1]) + (x[1]*y[0])       # общий числитель
# val_y = (y[0] * y[1])*2                 # общий знаменатель
#
# if val_x > val_y:               # Если числитель больше знаменателя выделяем целую часть
#     z.append(val_x//val_y)
#     z.append(val_x%val_y)
#     z.append(val_y)
#     print(z[0], ' ', z[1], '/', z[2])
# else:
#     print(val_x, '/', val_y)




# Задание-2:
# Дана ведомость расчета заработной платы (файл "data/workers").
# Рассчитайте зарплату всех работников, зная что они получат полный оклад,
# если отработают норму часов. Если же они отработали меньше нормы,
# то их ЗП уменьшается пропорционально, а за заждый час переработки
# они получают удвоенную ЗП, пропорциональную норме.
# Кол-во часов, которые были отработаны, указаны в файле "data/hours_of"

import os

path = 'C:\gigbrains-python\python\lesson03\home_work\data'
path = os.path.join(path,'workers')
f = open ( path , 'r' , encoding = 'UTF-8')
f = f.readlines()
print(f[0])
print(f[1])










# Задание-3:
# Дан файл ("data/fruits") со списком фруктов.
# Записать в новые файлы все фрукты, начинающиеся с определенной буквы.
# Т.е. в одном файле будут все фрукты на букву “А”, во втором на “Б” и т.д.
# Файлы назвать соответственно.
# Пример имен файлов: fruits_А, fruits_Б, fruits_В ….
# Важно! Обратите внимание, что нет фруктов, начинающихся с некоторых букв.
# Напишите универсальный код, который будет работать с любым списком фруктов
# и распределять по файлам в зависимости от первых букв, имеющихся в списке фруктов.
# Подсказка:
# Чтобы получить список больших букв русского алфавита:
# print(list(map(chr, range(ord('А'), ord('Я')+1))))
